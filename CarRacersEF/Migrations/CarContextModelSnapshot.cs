// <auto-generated />
using System;
using CarRacersEF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRacersEF.Migrations
{
    [DbContext(typeof(CarContext))]
    partial class CarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarRacersEF.Models.Car", b =>
                {
                    b.Property<int>("IdCar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCar"), 1L, 1);

                    b.Property<string>("BrandCar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MileageCar")
                        .HasColumnType("int");

                    b.Property<string>("ModelCar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ServiceDateCar")
                        .HasColumnType("datetime2");

                    b.HasKey("IdCar");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            IdCar = 1,
                            BrandCar = "Porsche",
                            MileageCar = 234,
                            ModelCar = "956",
                            ServiceDateCar = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdCar = 2,
                            BrandCar = "Audi",
                            MileageCar = 234,
                            ModelCar = "R8",
                            ServiceDateCar = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdCar = 3,
                            BrandCar = "Skyline",
                            MileageCar = 234,
                            ModelCar = "GT-R R32",
                            ServiceDateCar = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdCar = 4,
                            BrandCar = "Penske",
                            MileageCar = 234,
                            ModelCar = "PC-23",
                            ServiceDateCar = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdCar = 5,
                            BrandCar = "McLaren",
                            MileageCar = 234,
                            ModelCar = "M8",
                            ServiceDateCar = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CarRacersEF.Models.Driver", b =>
                {
                    b.Property<int>("IdDriver")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDriver"), 1L, 1);

                    b.Property<int>("AgeDriver")
                        .HasColumnType("int");

                    b.Property<string>("FirstNameDriver")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("LastNameDriver")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("NationalityDriver")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("PointsDriver")
                        .HasColumnType("int");

                    b.Property<string>("SecondNameDriver")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("IdDriver");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            IdDriver = 1,
                            AgeDriver = 19,
                            FirstNameDriver = "Александър",
                            LastNameDriver = "Иванов",
                            NationalityDriver = "България",
                            PointsDriver = 12,
                            SecondNameDriver = "Теодоров"
                        },
                        new
                        {
                            IdDriver = 2,
                            AgeDriver = 20,
                            FirstNameDriver = "Петър",
                            LastNameDriver = "Ангелов",
                            NationalityDriver = "България",
                            PointsDriver = 43,
                            SecondNameDriver = "Николов"
                        },
                        new
                        {
                            IdDriver = 3,
                            AgeDriver = 29,
                            FirstNameDriver = "Hans",
                            LastNameDriver = "Moritz",
                            NationalityDriver = "Германия",
                            PointsDriver = 98,
                            SecondNameDriver = "Florian"
                        },
                        new
                        {
                            IdDriver = 4,
                            AgeDriver = 25,
                            FirstNameDriver = "Виолета",
                            LastNameDriver = "Денева",
                            NationalityDriver = "България",
                            PointsDriver = 2,
                            SecondNameDriver = "Теодорова"
                        },
                        new
                        {
                            IdDriver = 5,
                            AgeDriver = 19,
                            FirstNameDriver = "Николай",
                            LastNameDriver = "Драгиев",
                            NationalityDriver = "България",
                            PointsDriver = 0,
                            SecondNameDriver = "Петров"
                        });
                });

            modelBuilder.Entity("CarRacersEF.Models.Race", b =>
                {
                    b.Property<int>("IdRace")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRace"), 1L, 1);

                    b.Property<DateTime>("DateRace")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrackRace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRace");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            IdRace = 1,
                            DateRace = new DateTime(2022, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrackRace = "Monte Carlo"
                        },
                        new
                        {
                            IdRace = 2,
                            DateRace = new DateTime(2021, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrackRace = "Autodromo Nazionale di Monza"
                        },
                        new
                        {
                            IdRace = 3,
                            DateRace = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrackRace = "Circuit de Spa-Francorchamps"
                        },
                        new
                        {
                            IdRace = 4,
                            DateRace = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrackRace = "Nurburgring Nordschleife"
                        },
                        new
                        {
                            IdRace = 5,
                            DateRace = new DateTime(2021, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrackRace = "Circuit de la Sarthe"
                        });
                });

            modelBuilder.Entity("CarRacersEF.Models.RaceDriverCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarIdCar")
                        .HasColumnType("int");

                    b.Property<int>("DriverIdDriver")
                        .HasColumnType("int");

                    b.Property<int>("IdCar")
                        .HasColumnType("int");

                    b.Property<int>("IdDriver")
                        .HasColumnType("int");

                    b.Property<int>("IdRace")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("RaceIdRace")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarIdCar");

                    b.HasIndex("DriverIdDriver");

                    b.HasIndex("RaceIdRace");

                    b.ToTable("RacesDriversCars");
                });

            modelBuilder.Entity("CarRacersEF.Models.RaceDriverCar", b =>
                {
                    b.HasOne("CarRacersEF.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarIdCar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRacersEF.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverIdDriver")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRacersEF.Models.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceIdRace")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Driver");

                    b.Navigation("Race");
                });
#pragma warning restore 612, 618
        }
    }
}
